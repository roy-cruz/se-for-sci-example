name: Our CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - other_branch
  workflow_dispatch:

jobs:
  hello:
    runs-on: ubuntu-latest
    steps:
      # Following run action is how you set up env variable. (Weird syntax)
      - id: step1
        run: echo "my_var=some-value" >> $GITHUB_ENV
      # - run: echo "my_var=some-value" >> $GITHUB_ENV
      # - run: echo ${my_var} # Using the defined env var in bash
      # - run: echo ${{ env.my_var }} # Also works this way
      # - run: echo "Hello world"
       - run: echo ${{ steps.step1.outputs.my_var }} # This syntax can be used to get output from other steps
      - run: echo "Hello world"


  test: # We want this one to run only once hello is finished
    needs: hello # Means test will only run once hello finished running
    # runs-on: ubuntu-latest
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix: # Allows us to run with different configurations without having to repeat ourselves and write them all out
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.12"] # Variable I can use
        include: # For macos, we only want to test a particular version of python in it. This is how.
          - os: macos-latest
            python-version: "3.11" 
    steps:
      - name: Check out repo
        uses: actions/checkout@v4 # actions/checkout@v4 -> does checkout
                                  # can also be done by specifying branch name, not recommended
                                  # In this case, it will checkout the version we're pushing/pulling
      - name: Set up python
        uses: actions/setup-python@v4 # To set up python when action is triggered
        with:
          # python-version: "3.11" # You need to specify the version when using this
          python-version: ${{ matrix.python-version }} # Special syntax  github uses to use variables defined
      - name: Install package
        run: python -m pip install .[test]
      - name: Run tests
        run: python -m pytest -v